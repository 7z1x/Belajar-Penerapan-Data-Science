# -*- coding: utf-8 -*-
"""notebook.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dmgg92ggz7cXw9cc_6HHuIpnfwnr_dzP

# Proyek Menyelesaikan Permasalahan Perusahaan Jaya Jaya Maju

- Nama: Zulfahmi M. Ardianto
- Laskar ID: A548YBM523



> Proyek ini dibangun untuk membuat model machine learning yang dapat memprediksi kemungkinan seorang karyawan akan keluar (attrition) berdasarkan data historis karyawan yang dimiliki perusahaan. Model ini diharapkan dapat membantu departemen Human Resources (HR) dalam mengidentifikasi karyawan yang berisiko tinggi untuk resign, serta memahami faktor-faktor utama yang memengaruhi keputusan tersebut

# Import
"""

# import library
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report
import xgboost as xgb
import joblib
from imblearn.over_sampling import SMOTE
import seaborn as sns
import matplotlib.pyplot as plt

"""# Data Loading"""

df = pd.read_csv('/content/employee_data.csv')
df.head()

"""# Data Understading

### Exploratory Data Analysis (EDA)
"""

df.info()

df.describe()

df.shape

df['Attrition'].value_counts()

"""## Distribusi Data"""

sns.countplot(x='Attrition', data=df)
plt.title('Distribusi Attrition')
plt.show()

"""Nilai 0.0 dan 1.0 pada kolom Attrition biasanya menandakan bahwa:

- 1.0 → Karyawan resign (attrition = YES)

- 0.0 → Karyawan tetap bekerja (attrition = NO)

### Korelasi Fitur Numerik
"""

plt.figure(figsize=(20,8))
numeric_cols = df.select_dtypes(include=['int64', 'float64'])
sns.heatmap(numeric_cols.corr(), annot=True, cmap='coolwarm')
plt.title("Korelasi antar Fitur Numerik")
plt.show()

"""Beberapa hal yang bisa diperhatikan dari data:

- Korelasi Attrition dengan fitur lain mostly negatif dan kecil, misalnya Age (-0.17), MonthlyIncome (-0.16), YearsAtCompany (-0.14). Ini masuk akal karena karyawan yang lebih muda, berpenghasilan rendah, dan baru bergabung lebih berpotensi resign.

- Ada korelasi sangat tinggi antara MonthlyIncome dan JobLevel (sekitar 0.95), juga JobLevel dengan MonthlyRate. Ini juga logis karena posisi lebih tinggi biasanya gaji lebih besar.

- Korelasi antara YearsAtCompany, YearsInCurrentRole, dan YearsWithCurrManager cukup tinggi (>0.7), menunjukkan keterkaitan pengalaman kerja dan durasi kerja di tempat yang sama.

### Visualisasi fitur kagorikal
"""

# Pilih fitur kategorikal (object atau kategori)
categorical_cols = df.select_dtypes(include='object').columns

# Buat subplot grid
n_cols = 2
n_rows = (len(categorical_cols) + 1) // n_cols
plt.figure(figsize=(14, 5 * n_rows))

# Loop tiap kolom kategorikal dan buat countplot
for i, col in enumerate(categorical_cols, 1):
    plt.subplot(n_rows, n_cols, i)
    sns.countplot(data=df, x=col, hue='Attrition')
    plt.title(f'{col} vs Attrition')
    plt.xticks(rotation=45)

plt.tight_layout()
plt.show()

"""### Visualisasi fitur numerical"""

numerical_cols = df.select_dtypes(include=['int64', 'float64']).columns.drop(['EmployeeId', 'Attrition'])

n_cols = 2
n_rows = (len(numerical_cols) + 1) // n_cols
plt.figure(figsize=(14, 5 * n_rows))

for i, col in enumerate(numerical_cols, 1):
    plt.subplot(n_rows, n_cols, i)
    sns.boxplot(data=df, x='Attrition', y=col)
    plt.title(f'{col} vs Attrition')

plt.tight_layout()
plt.show()

"""### Cek missing value"""

df.isnull().sum()

"""### Cek duplikasi"""

df.duplicated().sum()

"""# Data Preparation"""

# salin DataFrame
data = df.copy()

"""###  Handling Missing Value"""

# isi nilai yang hilang pada kolom 'Attrition' dengan modus (dari nilai terbanyak)
data['Attrition'] = data['Attrition'].fillna(data['Attrition'].mode()[0])

"""### Handling Duplikasi

Karena tidak ada duplicate maka tidak diperlukan proses penghapusan data. Ini menunjukkan bahwa data yang tersedia telah bersih dari redundansi dan siap digunakan untuk proses analisis dan pemodelan tanpa risiko perhitungan yang dapat memengaruhi hasil.

### Pemilahan fitur (feature) dan target (label)
"""

# pisahkan fitur dan target
X = data.drop('Attrition', axis=1)
y = data['Attrition']

"""### Encoding"""

# menangani data kategorikal dengan one-hot encoding
X = pd.get_dummies(X)

"""### Normalisasi data"""

scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

"""### Split data"""

# oversampling kelas minoritas dengan menggunakan SMOTE
smote = SMOTE(random_state=42)
X_resampled, y_resampled = smote.fit_resample(X_scaled, y)

# split data menjadi training dan testing
X_train, X_test, y_train, y_test = train_test_split(
    X_resampled, y_resampled, test_size=0.2, random_state=42, stratify=y_resampled
)
print(f"Ukuran data training: {X_train.shape}, Ukuran data testing: {X_test.shape}")

"""# Modeling"""

model = xgb.XGBClassifier(
    objective='binary:logistic',
    eval_metric='logloss',
    use_label_encoder=False,
    n_estimators=100,
    learning_rate=0.1,
    max_depth=6,
    random_state=42
)

model.fit(X_train, y_train)

"""# Evaluasi"""

# Prediksi data test
y_pred = model.predict(X_test)

# Confusion Matrix
cm = confusion_matrix(y_test, y_pred)
sns.heatmap(cm, annot=True, fmt='d', cmap='Blues', xticklabels=["Tidak Resign", "Resign"], yticklabels=["Tidak Resign", "Resign"])
plt.xlabel('Predicted')
plt.ylabel('Actual')
plt.title('Confusion Matrix')
plt.show()

# Classification Report
print(classification_report(y_test, y_pred))
print("Accuracy:", accuracy_score(y_test, y_pred))

xgb.plot_importance(model, max_num_features=10, importance_type='gain')
plt.title('Top 10 Fitur Paling Penting')
plt.show()

feature_names = X.columns.tolist()
importances = model.feature_importances_
top_indices = importances.argsort()[::-1][:10]

for i in top_indices:
    print(f"f{i} : {feature_names[i]} -> {importances[i]:.4f}")

# Simpan model
joblib.dump(model, 'model_attrition_xgboost.pkl')

"""# Kesimpulan"""

df_encoded = X.copy()
df_encoded['Attrition'] = data['Attrition']

fitur_cek = [
    'OverTime_No',
     'OverTime_Yes',
    'StockOptionLevel',
    'JobRole_Manufacturing Director',
    'JobLevel',
    'EnvironmentSatisfaction',
    'JobInvolvement',
    'MaritalStatus_Single',
    'JobSatisfaction',
    'JobRole_Sales Executive',
    'BusinessTravel_Travel_Frequently'
]

for fitur in fitur_cek:
    if fitur in df_encoded.columns:
        print(f"\nRata-rata {fitur} berdasarkan Attrition:")
        print(df_encoded.groupby('Attrition')[fitur].mean())
    else:
        print(f"\nFitur '{fitur}' tidak ditemukan di data setelah one-hot encoding.")

"""

---


## Berikut kesimpulan dari data 10 fitur

1. OverTime (Lembur)
  - Karyawan tidak resign cenderung tidak lembur (75% OverTime_No),

  - Karyawan resign cenderung lebih banyak lembur (54.7% OverTime_Yes).

  - Kesimpulan: Karyawan yang lembur lebih sering berisiko resign lebih tinggi, bisa jadi karena beban kerja lebih berat atau stres.

2. StockOptionLevel (Tingkat Opsi Saham)
  - Karyawan yang tidak resign memiliki rata-rata StockOptionLevel lebih tinggi (0.84 vs 0.46).

  - Kesimpulan: Memiliki opsi saham lebih banyak cenderung membuat karyawan bertahan (tidak resign).

3. JobRole_Manufacturing Director
  - Karyawan yang tidak resign lebih banyak yang berperan sebagai Manufacturing Director (10.7% vs 3.9%).

  - Kesimpulan: Posisi Manufacturing Director cenderung punya tingkat turnover lebih rendah.

4. JobLevel (Level Jabatan)
  - Karyawan yang tidak resign memiliki level jabatan lebih tinggi (2.12 vs 1.66).

  - Kesimpulan: Karyawan dengan level jabatan lebih tinggi cenderung bertahan.

5. EnvironmentSatisfaction (Kepuasan Lingkungan Kerja)
  - Rata-rata kepuasan lingkungan kerja lebih tinggi di karyawan yang tidak resign (2.77 vs 2.39).

  - Kesimpulan: Kepuasan lingkungan kerja yang rendah bisa memicu resign.

6. JobInvolvement (Keterlibatan Kerja)
  - Karyawan yang tidak resign lebih terlibat dengan pekerjaannya (2.76 vs 2.50).

  - Kesimpulan: Keterlibatan kerja yang rendah berhubungan dengan resign.

7. MaritalStatus_Single (Status Menikah)
  - Proporsi karyawan lajang lebih tinggi di yang resign (52.5% vs 29.1%).

  - Kesimpulan: Karyawan lajang cenderung lebih mungkin resign dibanding yang sudah menikah.

8. JobSatisfaction (Kepuasan Kerja)
  - Kepuasan kerja sedikit lebih rendah pada yang resign (2.53 vs 2.76).

  - Kesimpulan: Kepuasan kerja yang lebih rendah berkontribusi pada resign.

9. JobRole_Sales Executive
  - Proporsi Sales Executive hampir sama antara yang resign dan tidak (sekitar 22%).

  - Kesimpulan: Peran ini kurang signifikan berbeda dalam konteks resign.

10. BusinessTravel_Travel_Frequently (Sering Perjalanan Bisnis)
  - Karyawan yang resign lebih banyak yang sering melakukan perjalanan bisnis (28.5% vs 17.5%).

  - Kesimpulan: Sering perjalanan bisnis bisa jadi faktor risiko resign.

"""